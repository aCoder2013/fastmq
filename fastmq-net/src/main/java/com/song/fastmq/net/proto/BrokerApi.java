// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/brokerApi.proto

package com.song.fastmq.net.proto;

public final class BrokerApi {
  private BrokerApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CommandProducerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.song.fastmq.broker.net.CommandProducer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string topic = 1;</code>
     */
    java.lang.String getTopic();
    /**
     * <code>string topic = 1;</code>
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <code>uint64 producer_id = 2;</code>
     */
    long getProducerId();

    /**
     * <code>uint64 request_id = 3;</code>
     */
    long getRequestId();

    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    java.lang.String getProducerName();
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getProducerNameBytes();
  }
  /**
   * <pre>
   *&#47; Create a new Producer on a topic, assigning the given producer_id,
   * / all messages sent with this producer_id will be persisted on the topic
   * </pre>
   *
   * Protobuf type {@code com.song.fastmq.broker.net.CommandProducer}
   */
  public  static final class CommandProducer extends
      com.google.protobuf.GeneratedMessageLite<
          CommandProducer, CommandProducer.Builder> implements
      // @@protoc_insertion_point(message_implements:com.song.fastmq.broker.net.CommandProducer)
      CommandProducerOrBuilder {
    private CommandProducer() {
      topic_ = "";
      producerName_ = "";
    }
    public static final int TOPIC_FIELD_NUMBER = 1;
    private java.lang.String topic_;
    /**
     * <code>string topic = 1;</code>
     */
    public java.lang.String getTopic() {
      return topic_;
    }
    /**
     * <code>string topic = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(topic_);
    }
    /**
     * <code>string topic = 1;</code>
     */
    private void setTopic(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      topic_ = value;
    }
    /**
     * <code>string topic = 1;</code>
     */
    private void clearTopic() {
      
      topic_ = getDefaultInstance().getTopic();
    }
    /**
     * <code>string topic = 1;</code>
     */
    private void setTopicBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      topic_ = value.toStringUtf8();
    }

    public static final int PRODUCER_ID_FIELD_NUMBER = 2;
    private long producerId_;
    /**
     * <code>uint64 producer_id = 2;</code>
     */
    public long getProducerId() {
      return producerId_;
    }
    /**
     * <code>uint64 producer_id = 2;</code>
     */
    private void setProducerId(long value) {
      
      producerId_ = value;
    }
    /**
     * <code>uint64 producer_id = 2;</code>
     */
    private void clearProducerId() {
      
      producerId_ = 0L;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 3;
    private long requestId_;
    /**
     * <code>uint64 request_id = 3;</code>
     */
    public long getRequestId() {
      return requestId_;
    }
    /**
     * <code>uint64 request_id = 3;</code>
     */
    private void setRequestId(long value) {
      
      requestId_ = value;
    }
    /**
     * <code>uint64 request_id = 3;</code>
     */
    private void clearRequestId() {
      
      requestId_ = 0L;
    }

    public static final int PRODUCER_NAME_FIELD_NUMBER = 4;
    private java.lang.String producerName_;
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    public java.lang.String getProducerName() {
      return producerName_;
    }
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProducerNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(producerName_);
    }
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    private void setProducerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      producerName_ = value;
    }
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    private void clearProducerName() {
      
      producerName_ = getDefaultInstance().getProducerName();
    }
    /**
     * <pre>
     *&#47; If a producer name is specified, the name will be used,
     * / otherwise the broker will generate a unique name
     * </pre>
     *
     * <code>string producer_name = 4;</code>
     */
    private void setProducerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      producerName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!topic_.isEmpty()) {
        output.writeString(1, getTopic());
      }
      if (producerId_ != 0L) {
        output.writeUInt64(2, producerId_);
      }
      if (requestId_ != 0L) {
        output.writeUInt64(3, requestId_);
      }
      if (!producerName_.isEmpty()) {
        output.writeString(4, getProducerName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!topic_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTopic());
      }
      if (producerId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, producerId_);
      }
      if (requestId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, requestId_);
      }
      if (!producerName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getProducerName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.song.fastmq.net.proto.BrokerApi.CommandProducer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     *&#47; Create a new Producer on a topic, assigning the given producer_id,
     * / all messages sent with this producer_id will be persisted on the topic
     * </pre>
     *
     * Protobuf type {@code com.song.fastmq.broker.net.CommandProducer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.song.fastmq.net.proto.BrokerApi.CommandProducer, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.song.fastmq.broker.net.CommandProducer)
        com.song.fastmq.net.proto.BrokerApi.CommandProducerOrBuilder {
      // Construct using com.song.fastmq.net.proto.BrokerApi.CommandProducer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string topic = 1;</code>
       */
      public java.lang.String getTopic() {
        return instance.getTopic();
      }
      /**
       * <code>string topic = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        return instance.getTopicBytes();
      }
      /**
       * <code>string topic = 1;</code>
       */
      public Builder setTopic(
          java.lang.String value) {
        copyOnWrite();
        instance.setTopic(value);
        return this;
      }
      /**
       * <code>string topic = 1;</code>
       */
      public Builder clearTopic() {
        copyOnWrite();
        instance.clearTopic();
        return this;
      }
      /**
       * <code>string topic = 1;</code>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTopicBytes(value);
        return this;
      }

      /**
       * <code>uint64 producer_id = 2;</code>
       */
      public long getProducerId() {
        return instance.getProducerId();
      }
      /**
       * <code>uint64 producer_id = 2;</code>
       */
      public Builder setProducerId(long value) {
        copyOnWrite();
        instance.setProducerId(value);
        return this;
      }
      /**
       * <code>uint64 producer_id = 2;</code>
       */
      public Builder clearProducerId() {
        copyOnWrite();
        instance.clearProducerId();
        return this;
      }

      /**
       * <code>uint64 request_id = 3;</code>
       */
      public long getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>uint64 request_id = 3;</code>
       */
      public Builder setRequestId(long value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>uint64 request_id = 3;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      /**
       * <pre>
       *&#47; If a producer name is specified, the name will be used,
       * / otherwise the broker will generate a unique name
       * </pre>
       *
       * <code>string producer_name = 4;</code>
       */
      public java.lang.String getProducerName() {
        return instance.getProducerName();
      }
      /**
       * <pre>
       *&#47; If a producer name is specified, the name will be used,
       * / otherwise the broker will generate a unique name
       * </pre>
       *
       * <code>string producer_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getProducerNameBytes() {
        return instance.getProducerNameBytes();
      }
      /**
       * <pre>
       *&#47; If a producer name is specified, the name will be used,
       * / otherwise the broker will generate a unique name
       * </pre>
       *
       * <code>string producer_name = 4;</code>
       */
      public Builder setProducerName(
          java.lang.String value) {
        copyOnWrite();
        instance.setProducerName(value);
        return this;
      }
      /**
       * <pre>
       *&#47; If a producer name is specified, the name will be used,
       * / otherwise the broker will generate a unique name
       * </pre>
       *
       * <code>string producer_name = 4;</code>
       */
      public Builder clearProducerName() {
        copyOnWrite();
        instance.clearProducerName();
        return this;
      }
      /**
       * <pre>
       *&#47; If a producer name is specified, the name will be used,
       * / otherwise the broker will generate a unique name
       * </pre>
       *
       * <code>string producer_name = 4;</code>
       */
      public Builder setProducerNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProducerNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.song.fastmq.broker.net.CommandProducer)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.song.fastmq.net.proto.BrokerApi.CommandProducer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.song.fastmq.net.proto.BrokerApi.CommandProducer other = (com.song.fastmq.net.proto.BrokerApi.CommandProducer) arg1;
          topic_ = visitor.visitString(!topic_.isEmpty(), topic_,
              !other.topic_.isEmpty(), other.topic_);
          producerId_ = visitor.visitLong(producerId_ != 0L, producerId_,
              other.producerId_ != 0L, other.producerId_);
          requestId_ = visitor.visitLong(requestId_ != 0L, requestId_,
              other.requestId_ != 0L, other.requestId_);
          producerName_ = visitor.visitString(!producerName_.isEmpty(), producerName_,
              !other.producerName_.isEmpty(), other.producerName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  topic_ = s;
                  break;
                }
                case 16: {

                  producerId_ = input.readUInt64();
                  break;
                }
                case 24: {

                  requestId_ = input.readUInt64();
                  break;
                }
                case 34: {
                  java.lang.String s = input.readStringRequireUtf8();

                  producerName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.song.fastmq.net.proto.BrokerApi.CommandProducer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.song.fastmq.broker.net.CommandProducer)
    private static final com.song.fastmq.net.proto.BrokerApi.CommandProducer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CommandProducer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.song.fastmq.net.proto.BrokerApi.CommandProducer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CommandProducer> PARSER;

    public static com.google.protobuf.Parser<CommandProducer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CommandProducerSuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.song.fastmq.broker.net.CommandProducerSuccess)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint64 request_id = 1;</code>
     */
    long getRequestId();

    /**
     * <code>string producer_name = 2;</code>
     */
    java.lang.String getProducerName();
    /**
     * <code>string producer_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getProducerNameBytes();
  }
  /**
   * <pre>
   *&#47; Response from CommandProducer
   * </pre>
   *
   * Protobuf type {@code com.song.fastmq.broker.net.CommandProducerSuccess}
   */
  public  static final class CommandProducerSuccess extends
      com.google.protobuf.GeneratedMessageLite<
          CommandProducerSuccess, CommandProducerSuccess.Builder> implements
      // @@protoc_insertion_point(message_implements:com.song.fastmq.broker.net.CommandProducerSuccess)
      CommandProducerSuccessOrBuilder {
    private CommandProducerSuccess() {
      producerName_ = "";
    }
    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private long requestId_;
    /**
     * <code>uint64 request_id = 1;</code>
     */
    public long getRequestId() {
      return requestId_;
    }
    /**
     * <code>uint64 request_id = 1;</code>
     */
    private void setRequestId(long value) {
      
      requestId_ = value;
    }
    /**
     * <code>uint64 request_id = 1;</code>
     */
    private void clearRequestId() {
      
      requestId_ = 0L;
    }

    public static final int PRODUCER_NAME_FIELD_NUMBER = 2;
    private java.lang.String producerName_;
    /**
     * <code>string producer_name = 2;</code>
     */
    public java.lang.String getProducerName() {
      return producerName_;
    }
    /**
     * <code>string producer_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProducerNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(producerName_);
    }
    /**
     * <code>string producer_name = 2;</code>
     */
    private void setProducerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      producerName_ = value;
    }
    /**
     * <code>string producer_name = 2;</code>
     */
    private void clearProducerName() {
      
      producerName_ = getDefaultInstance().getProducerName();
    }
    /**
     * <code>string producer_name = 2;</code>
     */
    private void setProducerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      producerName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestId_ != 0L) {
        output.writeUInt64(1, requestId_);
      }
      if (!producerName_.isEmpty()) {
        output.writeString(2, getProducerName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (requestId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, requestId_);
      }
      if (!producerName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getProducerName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     *&#47; Response from CommandProducer
     * </pre>
     *
     * Protobuf type {@code com.song.fastmq.broker.net.CommandProducerSuccess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.song.fastmq.broker.net.CommandProducerSuccess)
        com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccessOrBuilder {
      // Construct using com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint64 request_id = 1;</code>
       */
      public long getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>uint64 request_id = 1;</code>
       */
      public Builder setRequestId(long value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>uint64 request_id = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      /**
       * <code>string producer_name = 2;</code>
       */
      public java.lang.String getProducerName() {
        return instance.getProducerName();
      }
      /**
       * <code>string producer_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProducerNameBytes() {
        return instance.getProducerNameBytes();
      }
      /**
       * <code>string producer_name = 2;</code>
       */
      public Builder setProducerName(
          java.lang.String value) {
        copyOnWrite();
        instance.setProducerName(value);
        return this;
      }
      /**
       * <code>string producer_name = 2;</code>
       */
      public Builder clearProducerName() {
        copyOnWrite();
        instance.clearProducerName();
        return this;
      }
      /**
       * <code>string producer_name = 2;</code>
       */
      public Builder setProducerNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProducerNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.song.fastmq.broker.net.CommandProducerSuccess)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess other = (com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess) arg1;
          requestId_ = visitor.visitLong(requestId_ != 0L, requestId_,
              other.requestId_ != 0L, other.requestId_);
          producerName_ = visitor.visitString(!producerName_.isEmpty(), producerName_,
              !other.producerName_.isEmpty(), other.producerName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  requestId_ = input.readUInt64();
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  producerName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.song.fastmq.broker.net.CommandProducerSuccess)
    private static final com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CommandProducerSuccess();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CommandProducerSuccess> PARSER;

    public static com.google.protobuf.Parser<CommandProducerSuccess> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.song.fastmq.broker.net.Command)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    com.song.fastmq.net.proto.BrokerApi.Command.Type getType();

    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    boolean hasProducer();
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    com.song.fastmq.net.proto.BrokerApi.CommandProducer getProducer();

    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    boolean hasProducerSuccess();
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess getProducerSuccess();
  }
  /**
   * Protobuf type {@code com.song.fastmq.broker.net.Command}
   */
  public  static final class Command extends
      com.google.protobuf.GeneratedMessageLite<
          Command, Command.Builder> implements
      // @@protoc_insertion_point(message_implements:com.song.fastmq.broker.net.Command)
      CommandOrBuilder {
    private Command() {
    }
    /**
     * Protobuf enum {@code com.song.fastmq.broker.net.Command.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>CONNECT = 0;</code>
       */
      CONNECT(0),
      /**
       * <code>CONNECTED = 1;</code>
       */
      CONNECTED(1),
      /**
       * <code>SUBSCRIBE = 2;</code>
       */
      SUBSCRIBE(2),
      /**
       * <code>PRODUCER = 3;</code>
       */
      PRODUCER(3),
      /**
       * <code>SEND = 4;</code>
       */
      SEND(4),
      /**
       * <code>SEND_RECEIPT = 5;</code>
       */
      SEND_RECEIPT(5),
      /**
       * <code>SEND_ERROR = 6;</code>
       */
      SEND_ERROR(6),
      /**
       * <code>MESSAGE = 7;</code>
       */
      MESSAGE(7),
      /**
       * <code>ACK = 8;</code>
       */
      ACK(8),
      /**
       * <code>FLOW = 9;</code>
       */
      FLOW(9),
      /**
       * <code>UNSUBSCRIBE = 10;</code>
       */
      UNSUBSCRIBE(10),
      /**
       * <code>SUCCESS = 11;</code>
       */
      SUCCESS(11),
      /**
       * <code>ERROR = 12;</code>
       */
      ERROR(12),
      /**
       * <code>CLOSE_PRODUCER = 13;</code>
       */
      CLOSE_PRODUCER(13),
      /**
       * <code>CLOSE_CONSUMER = 14;</code>
       */
      CLOSE_CONSUMER(14),
      /**
       * <code>PRODUCER_SUCCESS = 15;</code>
       */
      PRODUCER_SUCCESS(15),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CONNECT = 0;</code>
       */
      public static final int CONNECT_VALUE = 0;
      /**
       * <code>CONNECTED = 1;</code>
       */
      public static final int CONNECTED_VALUE = 1;
      /**
       * <code>SUBSCRIBE = 2;</code>
       */
      public static final int SUBSCRIBE_VALUE = 2;
      /**
       * <code>PRODUCER = 3;</code>
       */
      public static final int PRODUCER_VALUE = 3;
      /**
       * <code>SEND = 4;</code>
       */
      public static final int SEND_VALUE = 4;
      /**
       * <code>SEND_RECEIPT = 5;</code>
       */
      public static final int SEND_RECEIPT_VALUE = 5;
      /**
       * <code>SEND_ERROR = 6;</code>
       */
      public static final int SEND_ERROR_VALUE = 6;
      /**
       * <code>MESSAGE = 7;</code>
       */
      public static final int MESSAGE_VALUE = 7;
      /**
       * <code>ACK = 8;</code>
       */
      public static final int ACK_VALUE = 8;
      /**
       * <code>FLOW = 9;</code>
       */
      public static final int FLOW_VALUE = 9;
      /**
       * <code>UNSUBSCRIBE = 10;</code>
       */
      public static final int UNSUBSCRIBE_VALUE = 10;
      /**
       * <code>SUCCESS = 11;</code>
       */
      public static final int SUCCESS_VALUE = 11;
      /**
       * <code>ERROR = 12;</code>
       */
      public static final int ERROR_VALUE = 12;
      /**
       * <code>CLOSE_PRODUCER = 13;</code>
       */
      public static final int CLOSE_PRODUCER_VALUE = 13;
      /**
       * <code>CLOSE_CONSUMER = 14;</code>
       */
      public static final int CLOSE_CONSUMER_VALUE = 14;
      /**
       * <code>PRODUCER_SUCCESS = 15;</code>
       */
      public static final int PRODUCER_SUCCESS_VALUE = 15;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return CONNECT;
          case 1: return CONNECTED;
          case 2: return SUBSCRIBE;
          case 3: return PRODUCER;
          case 4: return SEND;
          case 5: return SEND_RECEIPT;
          case 6: return SEND_ERROR;
          case 7: return MESSAGE;
          case 8: return ACK;
          case 9: return FLOW;
          case 10: return UNSUBSCRIBE;
          case 11: return SUCCESS;
          case 12: return ERROR;
          case 13: return CLOSE_PRODUCER;
          case 14: return CLOSE_CONSUMER;
          case 15: return PRODUCER_SUCCESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.song.fastmq.broker.net.Command.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    public com.song.fastmq.net.proto.BrokerApi.Command.Type getType() {
      com.song.fastmq.net.proto.BrokerApi.Command.Type result = com.song.fastmq.net.proto.BrokerApi.Command.Type.forNumber(type_);
      return result == null ? com.song.fastmq.net.proto.BrokerApi.Command.Type.UNRECOGNIZED : result;
    }
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    private void setType(com.song.fastmq.net.proto.BrokerApi.Command.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
    }
    /**
     * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int PRODUCER_FIELD_NUMBER = 2;
    private com.song.fastmq.net.proto.BrokerApi.CommandProducer producer_;
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    public boolean hasProducer() {
      return producer_ != null;
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    public com.song.fastmq.net.proto.BrokerApi.CommandProducer getProducer() {
      return producer_ == null ? com.song.fastmq.net.proto.BrokerApi.CommandProducer.getDefaultInstance() : producer_;
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    private void setProducer(com.song.fastmq.net.proto.BrokerApi.CommandProducer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      producer_ = value;
      
      }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    private void setProducer(
        com.song.fastmq.net.proto.BrokerApi.CommandProducer.Builder builderForValue) {
      producer_ = builderForValue.build();
      
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    private void mergeProducer(com.song.fastmq.net.proto.BrokerApi.CommandProducer value) {
      if (producer_ != null &&
          producer_ != com.song.fastmq.net.proto.BrokerApi.CommandProducer.getDefaultInstance()) {
        producer_ =
          com.song.fastmq.net.proto.BrokerApi.CommandProducer.newBuilder(producer_).mergeFrom(value).buildPartial();
      } else {
        producer_ = value;
      }
      
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
     */
    private void clearProducer() {  producer_ = null;
      
    }

    public static final int PRODUCERSUCCESS_FIELD_NUMBER = 3;
    private com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess producerSuccess_;
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    public boolean hasProducerSuccess() {
      return producerSuccess_ != null;
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    public com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess getProducerSuccess() {
      return producerSuccess_ == null ? com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.getDefaultInstance() : producerSuccess_;
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    private void setProducerSuccess(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess value) {
      if (value == null) {
        throw new NullPointerException();
      }
      producerSuccess_ = value;
      
      }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    private void setProducerSuccess(
        com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.Builder builderForValue) {
      producerSuccess_ = builderForValue.build();
      
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    private void mergeProducerSuccess(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess value) {
      if (producerSuccess_ != null &&
          producerSuccess_ != com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.getDefaultInstance()) {
        producerSuccess_ =
          com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.newBuilder(producerSuccess_).mergeFrom(value).buildPartial();
      } else {
        producerSuccess_ = value;
      }
      
    }
    /**
     * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
     */
    private void clearProducerSuccess() {  producerSuccess_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.song.fastmq.net.proto.BrokerApi.Command.Type.CONNECT.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (producer_ != null) {
        output.writeMessage(2, getProducer());
      }
      if (producerSuccess_ != null) {
        output.writeMessage(3, getProducerSuccess());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.song.fastmq.net.proto.BrokerApi.Command.Type.CONNECT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (producer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProducer());
      }
      if (producerSuccess_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProducerSuccess());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.song.fastmq.net.proto.BrokerApi.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.song.fastmq.net.proto.BrokerApi.Command prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.song.fastmq.broker.net.Command}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.song.fastmq.net.proto.BrokerApi.Command, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.song.fastmq.broker.net.Command)
        com.song.fastmq.net.proto.BrokerApi.CommandOrBuilder {
      // Construct using com.song.fastmq.net.proto.BrokerApi.Command.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
       */
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
       */
      public com.song.fastmq.net.proto.BrokerApi.Command.Type getType() {
        return instance.getType();
      }
      /**
       * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
       */
      public Builder setType(com.song.fastmq.net.proto.BrokerApi.Command.Type value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.Command.Type type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public boolean hasProducer() {
        return instance.hasProducer();
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public com.song.fastmq.net.proto.BrokerApi.CommandProducer getProducer() {
        return instance.getProducer();
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public Builder setProducer(com.song.fastmq.net.proto.BrokerApi.CommandProducer value) {
        copyOnWrite();
        instance.setProducer(value);
        return this;
        }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public Builder setProducer(
          com.song.fastmq.net.proto.BrokerApi.CommandProducer.Builder builderForValue) {
        copyOnWrite();
        instance.setProducer(builderForValue);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public Builder mergeProducer(com.song.fastmq.net.proto.BrokerApi.CommandProducer value) {
        copyOnWrite();
        instance.mergeProducer(value);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducer producer = 2;</code>
       */
      public Builder clearProducer() {  copyOnWrite();
        instance.clearProducer();
        return this;
      }

      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public boolean hasProducerSuccess() {
        return instance.hasProducerSuccess();
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess getProducerSuccess() {
        return instance.getProducerSuccess();
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public Builder setProducerSuccess(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess value) {
        copyOnWrite();
        instance.setProducerSuccess(value);
        return this;
        }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public Builder setProducerSuccess(
          com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.Builder builderForValue) {
        copyOnWrite();
        instance.setProducerSuccess(builderForValue);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public Builder mergeProducerSuccess(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess value) {
        copyOnWrite();
        instance.mergeProducerSuccess(value);
        return this;
      }
      /**
       * <code>.com.song.fastmq.broker.net.CommandProducerSuccess producerSuccess = 3;</code>
       */
      public Builder clearProducerSuccess() {  copyOnWrite();
        instance.clearProducerSuccess();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.song.fastmq.broker.net.Command)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.song.fastmq.net.proto.BrokerApi.Command();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.song.fastmq.net.proto.BrokerApi.Command other = (com.song.fastmq.net.proto.BrokerApi.Command) arg1;
          type_ = visitor.visitInt(type_ != 0, type_,    other.type_ != 0, other.type_);
          producer_ = visitor.visitMessage(producer_, other.producer_);
          producerSuccess_ = visitor.visitMessage(producerSuccess_, other.producerSuccess_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
                case 18: {
                  com.song.fastmq.net.proto.BrokerApi.CommandProducer.Builder subBuilder = null;
                  if (producer_ != null) {
                    subBuilder = producer_.toBuilder();
                  }
                  producer_ = input.readMessage(com.song.fastmq.net.proto.BrokerApi.CommandProducer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(producer_);
                    producer_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.Builder subBuilder = null;
                  if (producerSuccess_ != null) {
                    subBuilder = producerSuccess_.toBuilder();
                  }
                  producerSuccess_ = input.readMessage(com.song.fastmq.net.proto.BrokerApi.CommandProducerSuccess.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(producerSuccess_);
                    producerSuccess_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.song.fastmq.net.proto.BrokerApi.Command.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.song.fastmq.broker.net.Command)
    private static final com.song.fastmq.net.proto.BrokerApi.Command DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Command();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.song.fastmq.net.proto.BrokerApi.Command getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Command> PARSER;

    public static com.google.protobuf.Parser<Command> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
